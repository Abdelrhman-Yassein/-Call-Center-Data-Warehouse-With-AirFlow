[2022-11-20T00:45:01.290+0000] {taskinstance.py:1165} INFO - Dependencies all met for <TaskInstance: Call_Center_ETL_DAG.create_database_tables manual__2022-11-20T00:44:38.455644+00:00 [queued]>
[2022-11-20T00:45:01.367+0000] {taskinstance.py:1165} INFO - Dependencies all met for <TaskInstance: Call_Center_ETL_DAG.create_database_tables manual__2022-11-20T00:44:38.455644+00:00 [queued]>
[2022-11-20T00:45:01.371+0000] {taskinstance.py:1362} INFO - 
--------------------------------------------------------------------------------
[2022-11-20T00:45:01.372+0000] {taskinstance.py:1363} INFO - Starting attempt 1 of 1
[2022-11-20T00:45:01.373+0000] {taskinstance.py:1364} INFO - 
--------------------------------------------------------------------------------
[2022-11-20T00:45:01.456+0000] {taskinstance.py:1383} INFO - Executing <Task(MySqlOperator): create_database_tables> on 2022-11-20 00:44:38.455644+00:00
[2022-11-20T00:45:01.479+0000] {standard_task_runner.py:55} INFO - Started process 3535 to run task
[2022-11-20T00:45:01.499+0000] {standard_task_runner.py:82} INFO - Running: ['***', 'tasks', 'run', 'Call_Center_ETL_DAG', 'create_database_tables', 'manual__2022-11-20T00:44:38.455644+00:00', '--job-id', '140', '--raw', '--subdir', 'DAGS_FOLDER/call_center_dag.py', '--cfg-path', '/tmp/tmp23vs176q']
[2022-11-20T00:45:01.501+0000] {standard_task_runner.py:83} INFO - Job 140: Subtask create_database_tables
[2022-11-20T00:45:01.908+0000] {task_command.py:376} INFO - Running <TaskInstance: Call_Center_ETL_DAG.create_database_tables manual__2022-11-20T00:44:38.455644+00:00 [running]> on host 9eba6bc17a61
[2022-11-20T00:45:03.036+0000] {taskinstance.py:1592} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_OWNER=Abdelrhman Yassein
AIRFLOW_CTX_DAG_ID=Call_Center_ETL_DAG
AIRFLOW_CTX_TASK_ID=create_database_tables
AIRFLOW_CTX_EXECUTION_DATE=2022-11-20T00:44:38.455644+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=manual__2022-11-20T00:44:38.455644+00:00
[2022-11-20T00:45:03.057+0000] {mysql.py:84} INFO - Executing: 
    #Create Customer Tabel 

    CREATE TABLE IF NOT EXISTS customers (
        customer_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
        customer_name VARCHAR(255) NOT NULL,
        city VARCHAR(50),
        state VARCHAR(50),
        sentiment VARCHAR(50)
    );

    # Create call_fact Table 

    CREATE TABLE IF NOT EXISTS call_fact (
        call_id VARCHAR(255) NOT NULL PRIMARY KEY,
        customer_id INT NOT NULL,
        call_date DATE NOT NULL,
        csat_score INT,
        call_in_minutes INT,
        constraint customer_fk foreign key (customer_id) references customers(customer_id) 
    );

    # Create call_time Table

    CREATE TABLE IF NOT EXISTS call_time (
            call_date   DATE NOT NULL primary key,
            day         INT NOT NULL,
            week        INT,
            weekday     VARCHAR(255),
            month       INT,
            year        INT
    );

    
    # Create call_info Table

    CREATE TABLE IF NOT EXISTS call_info (
        call_id VARCHAR(255) NOT NULL PRIMARY KEY,
        reason VARCHAR(255),
        channel VARCHAR(255),
        call_center VARCHAR(255),
        response_time VARCHAR(255)
    )
    
[2022-11-20T00:45:03.180+0000] {base.py:71} INFO - Using connection ID 'mysql_conn_id' for task execution.
[2022-11-20T00:45:03.511+0000] {sql.py:315} INFO - Running statement: 
    #Create Customer Tabel 

    CREATE TABLE IF NOT EXISTS customers (
        customer_id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
        customer_name VARCHAR(255) NOT NULL,
        city VARCHAR(50),
        state VARCHAR(50),
        sentiment VARCHAR(50)
    );

    # Create call_fact Table 

    CREATE TABLE IF NOT EXISTS call_fact (
        call_id VARCHAR(255) NOT NULL PRIMARY KEY,
        customer_id INT NOT NULL,
        call_date DATE NOT NULL,
        csat_score INT,
        call_in_minutes INT,
        constraint customer_fk foreign key (customer_id) references customers(customer_id) 
    );

    # Create call_time Table

    CREATE TABLE IF NOT EXISTS call_time (
            call_date   DATE NOT NULL primary key,
            day         INT NOT NULL,
            week        INT,
            weekday     VARCHAR(255),
            month       INT,
            year        INT
    );

    
    # Create call_info Table

    CREATE TABLE IF NOT EXISTS call_info (
        call_id VARCHAR(255) NOT NULL PRIMARY KEY,
        reason VARCHAR(255),
        channel VARCHAR(255),
        call_center VARCHAR(255),
        response_time VARCHAR(255)
    )
    , parameters: None
[2022-11-20T00:45:03.946+0000] {sql.py:324} INFO - Rows affected: 0
[2022-11-20T00:45:05.357+0000] {taskinstance.py:1406} INFO - Marking task as SUCCESS. dag_id=Call_Center_ETL_DAG, task_id=create_database_tables, execution_date=20221120T004438, start_date=20221120T004501, end_date=20221120T004505
[2022-11-20T00:45:05.469+0000] {local_task_job.py:159} INFO - Task exited with return code 0
[2022-11-20T00:45:05.581+0000] {taskinstance.py:2623} INFO - 1 downstream tasks scheduled from follow-on schedule check
